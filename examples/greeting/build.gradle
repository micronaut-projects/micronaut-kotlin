plugins {
    id "application"
    id("org.jetbrains.kotlin.jvm")
    id("org.jetbrains.kotlin.kapt")
    alias(libs.plugins.kotlin.plugin.allopen)
}

repositories {
    mavenCentral()
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
}

mainClassName = 'app.ApplicationKt'
sourceCompatibility = 17

compileKotlin { kotlinOptions.jvmTarget = "17" }
compileTestKotlin { kotlinOptions.jvmTarget = "17" }

dependencies {
    kapt(platform(mn.micronaut.core.bom))
    kapt(mn.micronaut.inject.java)

    kaptTest(platform(mn.micronaut.core.bom))
    kaptTest(mn.micronaut.inject.java)

    annotationProcessor(platform(mn.micronaut.core.bom))
    annotationProcessor(mn.micronaut.inject.java)

    implementation(platform(mn.micronaut.core.bom))
    implementation(mn.micronaut.inject)
    implementation projects.ktor
    implementation(libs.ktor.jackson)
    implementation(libs.ktor.server.netty)

    runtimeOnly(libs.logback.classic)

    testImplementation(mn.micronaut.http.client)
    testImplementation(mnTest.micronaut.test.junit5)
    testImplementation(libs.junit.jupiter.engine)
    testImplementation(mnReactor.reactor.core)
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '17'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '17'
        javaParameters = true
    }
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

test {
    useJUnitPlatform()
}
