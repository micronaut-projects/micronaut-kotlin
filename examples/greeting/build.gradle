plugins {
    id("io.micronaut.application")
    id("org.jetbrains.kotlin.jvm")
    id("org.jetbrains.kotlin.kapt")
    id("org.jetbrains.kotlin.plugin.allopen")
}

mainClassName = 'app.ApplicationKt'
sourceCompatibility = 17

compileKotlin { kotlinOptions.jvmTarget = "17" }
compileTestKotlin { kotlinOptions.jvmTarget = "17" }

dependencies {
    implementation(mn.micronaut.inject)
    implementation(mnSerde.micronaut.serde.jackson)
    implementation projects.micronautKtor
    implementation(libs.ktor.server.content.negotiation)
    implementation(libs.ktor.serialization.jackson)
    implementation(libs.ktor.server.netty)

    runtimeOnly(mn.logback.classic)

    testImplementation(mn.micronaut.http.client)
    testImplementation(mnTest.micronaut.test.junit5)
    testImplementation(libs.junit.jupiter.engine)
    testImplementation(mnReactor.micronaut.reactor)
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '17'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '17'
        javaParameters = true
    }
}

test {
    useJUnitPlatform()
}

graalvmNative {
    metadataRepository {
        enabled = true
    }
}
