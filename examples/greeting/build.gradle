plugins {
    id "application"
    id "org.jetbrains.kotlin.jvm"
    id("org.jetbrains.kotlin.kapt")
    id("org.jetbrains.kotlin.plugin.allopen") version "$kotlinVersion"
}

repositories {
    mavenCentral()
}

mainClassName = 'app.ApplicationKt'
sourceCompatibility = 1.8

compileKotlin { kotlinOptions.jvmTarget = "1.8" }
compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }

dependencies {
    kapt(platform(libs.boms.micronaut))
    kapt(libs.micronaut.inject.java)

    kaptTest(platform(libs.boms.micronaut))
    kaptTest(libs.micronaut.inject.java)

    annotationProcessor(platform(libs.boms.micronaut))
    annotationProcessor(libs.micronaut.inject.java)

    implementation(platform(libs.boms.micronaut))
    implementation(libs.micronaut.inject)
    implementation project(":ktor")
    implementation(libs.ktor.jackson)
    implementation(libs.ktor.server.netty)

    runtimeOnly "ch.qos.logback:logback-classic"

    testImplementation(libs.micronaut.http.client)
    testImplementation(libs.micronaut.test.junit5)
    testImplementation(libs.junit.jupiter.engine)
    testImplementation(libs.reactor.core)
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

test {
    useJUnitPlatform()
}
