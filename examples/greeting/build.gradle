buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}

apply plugin: "application"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-allopen"

mainClassName = 'app.ApplicationKt'
sourceCompatibility = 1.8
compileKotlin { kotlinOptions.jvmTarget = "1.8" }
compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }

repositories {
    jcenter()
}


dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")

    annotationProcessor "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-inject-java"
    kaptTest "io.micronaut:micronaut-inject-java"

    implementation "io.micronaut:micronaut-inject"
    implementation project(":ktor")
    implementation "io.ktor:ktor-jackson:$ktorVersion"
    implementation "io.ktor:ktor-server-netty:$ktorVersion"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    testImplementation "io.micronaut:micronaut-http-client"
    testImplementation "io.micronaut.test:micronaut-test-junit5:1.2.1"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.6.2"
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

test {
    useJUnitPlatform()
}
